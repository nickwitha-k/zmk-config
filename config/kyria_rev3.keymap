/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    // chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs

    chain-length = <25>; // Uncomment if using only per-key LEDs.
};

/ {
    macros {
        MO_TOG: MO_TOG {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &macro_param_1to2 &mo_tog MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
            label = "MO_TOG";
        };
    };

    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        bang_hash: bang_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "BANG_HASH";
            bindings = <&kp EXCL>, <&kp HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ptr_deref: ptr_deref {
            compatible = "zmk,behavior-mod-morph";
            label = "PTR_DEREF";
            bindings = <&kp STAR>, <&kp AMPS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_hue_enc: rgb_hue_enc {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_HUE_ENC";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };

        rgb_sat_enc: rgb_sat_enc {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_SAT_ENC";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R           &kp T                                                  &kp Y      &kp U           &kp I      &kp O    &kp P     &kp BSLH
&kp TAB    &kp A  &kp S  &kp D     &kp F           &kp G                                                  &kp H      &kp J           &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V           &kp B     &kp LBKT  &bang_hash  &ptr_deref  &kp RBKT   &kp N      &kp M           &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LPAR  &mt LGUI MINUS  &kp LALT  &kp BSPC  &MO_TOG 1   &MO_TOG 2   &kp SPACE  &kp RCTRL  &mt RGUI EQUAL  &kp RPAR
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans          &trans          &trans           &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans          &trans
            >;
        };

        NUM {
            bindings = <
&kp GRAVE  &kp EXCL  &trans  &trans  &trans  &trans                                  &kp CARET     &kp N7  &kp N8  &kp N9  &trans  &trans
&kp HASH   &kp AT    &trans  &trans  &trans  &trans                                  &kp PERCENT   &kp N4  &kp N5  &kp N6  &trans  &trans
&trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_0  &kp N1  &kp N2  &kp N3  &trans  &trans
                             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans
            >;
        };

        CONF {
            bindings = <
&trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &trans  &trans  &trans  &trans           &trans           &rgb_ug RGB_TOG
&trans  &trans  &bt BT_PRV  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_NXT                                    &trans  &trans  &trans  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI
&trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_SPD  &rgb_ug RGB_BRD
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&rgb_hue_enc>, <&rgb_sat_enc>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        CON_LAYER {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
